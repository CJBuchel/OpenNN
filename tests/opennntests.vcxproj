<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{E6E7E95A-03D9-3E98-9DFB-132EE141754F}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>opennntests</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">opennntests.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">opennntests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">opennntests.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">opennntests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">opennntests.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">opennntests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">opennntests.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">opennntests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\opennn\Debug\opennn.lib;..\tinyxml2\Debug\tinyxml2.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:X86</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/Debug/opennntests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/Debug/opennntests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\opennn\Release\opennn.lib;..\tinyxml2\Release\tinyxml2.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:X86</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/Release/opennntests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/Release/opennntests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\opennn\MinSizeRel\opennn.lib;..\tinyxml2\MinSizeRel\tinyxml2.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:X86</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/MinSizeRel/opennntests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/MinSizeRel/opennntests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\opennn\RelWithDebInfo\opennn.lib;..\tinyxml2\RelWithDebInfo\tinyxml2.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:X86</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/RelWithDebInfo/opennntests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/RelWithDebInfo/opennntests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101 -BD:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101 --check-stamp-file D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeLists.txt;D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeLists.txt;D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101 -BD:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101 --check-stamp-file D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeLists.txt;D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeLists.txt;D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101 -BD:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101 --check-stamp-file D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeLists.txt;D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeLists.txt;D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101 -BD:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101 --check-stamp-file D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/Users/Conno/Desktop/Code/Entity101/MachineLearning/Entity101/tests/CMakeLists.txt;D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeLists.txt;D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\unit_testing.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\variables_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\instances_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\missing_values_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\data_set_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\plug_in_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\ordinary_differential_equations_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\mathematical_model_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\unscaling_layer_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\scaling_layer_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\probabilistic_layer_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\perceptron_layer_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\perceptron_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\neural_network_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\multilayer_perceptron_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\inputs_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\outputs_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\independent_parameters_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\conditions_layer_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\bounding_layer_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\sum_squared_error_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\root_mean_squared_error_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\error_term_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\mock_error_term.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\loss_index_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\outputs_integrals_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\normalized_squared_error_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\weighted_squared_error_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\neural_parameters_norm_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\minkowski_error_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\mean_squared_error_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\cross_entropy_error_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\training_strategy_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\training_rate_algorithm_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\mock_training_algorithm.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\training_algorithm_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\random_search_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\quasi_newton_method_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\newton_method_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\levenberg_marquardt_algorithm_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\gradient_descent_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\evolutionary_algorithm_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\conjugate_gradient_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\model_selection_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\order_selection_algorithm_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\incremental_order_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\golden_section_order_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\simulated_annealing_order_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\inputs_selection_algorithm_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\growing_inputs_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\pruning_inputs_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\genetic_algorithm_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\testing_analysis_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\vector_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\matrix_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\numerical_integration_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\numerical_differentiation_test.cpp" />
    <ClCompile Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\main.cpp" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\unit_testing.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\variables_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\instances_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\missing_values_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\data_set_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\plug_in_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\ordinary_differential_equations_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\mathematical_model_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\unscaling_layer_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\scaling_layer_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\probabilistic_layer_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\perceptron_layer_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\perceptron_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\neural_network_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\multilayer_perceptron_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\inputs_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\outputs_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\independent_parameters_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\conditions_layer_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\bounding_layer_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\sum_squared_error_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\root_mean_squared_error_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\error_term_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\mock_error_term.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\loss_index_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\outputs_integrals_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\normalized_squared_error_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\weighted_squared_error_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\neural_parameters_norm_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\minkowski_error_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\mean_squared_error_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\cross_entropy_error_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\training_strategy_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\training_rate_algorithm_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\mock_training_algorithm.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\training_algorithm_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\random_search_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\quasi_newton_method_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\newton_method_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\levenberg_marquardt_algorithm_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\gradient_descent_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\evolutionary_algorithm_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\conjugate_gradient_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\model_selection_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\order_selection_algorithm_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\incremental_order_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\golden_section_order_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\simulated_annealing_order_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\inputs_selection_algorithm_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\growing_inputs_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\pruning_inputs_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\genetic_algorithm_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\testing_analysis_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\vector_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\matrix_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\numerical_integration_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\numerical_differentiation_test.h" />
    <ClInclude Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tests\opennn_tests.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\ZERO_CHECK.vcxproj">
      <Project>{796FCAA1-2173-3EFB-9BE9-14A40C7C9220}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\opennn\opennn.vcxproj">
      <Project>{50C55074-6349-3721-A2C9-A6693AFF36C9}</Project>
      <Name>opennn</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\Users\Conno\Desktop\Code\Entity101\MachineLearning\Entity101\tinyxml2\tinyxml2.vcxproj">
      <Project>{D8ABBA70-3D13-31F3-8D6F-F706FFE69826}</Project>
      <Name>tinyxml2</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>